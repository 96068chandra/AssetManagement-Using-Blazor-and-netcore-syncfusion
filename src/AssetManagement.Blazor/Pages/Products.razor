
@page "/products"
@using Volo.Abp.Application.Dtos
@using AssetManagement.Products
@using AssetManagement.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<AssetManagementResource> L
@inject AbpBlazorMessageLocalizerHelper<AssetManagementResource> LH

@inherits AbpCrudPageBase<IProductAppService,ProductDto,Guid,PagedAndSortedResultRequestDto,CreataUpdateProductDto>


<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Products"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">
                    @L["NewProduct"]
                </Button>
            </Column>
        </Row>
    </CardHeader>

    <CardBody>
        <DataGrid TItem="ProductDto" Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Name)"
                                Caption="@L["Name"]"> </DataGridColumn>

                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Description)"
                                Caption="@L["Description"]">

                </DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.productType)"
                                Caption="@L["productType"]">
                    <DisplayTemplate>
                        @L[$"{context.productType}"]
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Price)"
                                Caption="@L["Price"]">

                </DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.CreationTime)"
                                Caption="@L["CreationTime"]">
                    <DisplayTemplate>
                        @context.CreationTime.ToLongDateString()
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>


        </DataGrid>
    </CardBody>
</Card>
<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewBook"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["productType"]</FieldLabel>
                        <Select TValue="ProductType" @bind-SelectedValue="@NewEntity.productType">
                            @foreach (var productTypeValue in Enum.GetValues(typeof(ProductType)))
                            {
                                <SelectItem TValue="ProductType" Value="@((ProductType)productTypeValue)">
                                    @L[$"{productTypeValue}"]

                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Description"]</FieldLabel>
                        <TextEdit @bind-Value="NewEntity.Description" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Price"]</FieldLabel>
                        <NumericEdit TValue="float" @bind-Value="NewEntity.Price" />
                    </Field>
                 </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>